#ifndef _H_pprof
#define _H_pprof

#include <string.h>
#include <stdlib.h>
#include <sys/types.h>
#include <proto/profile.pb-c.h> // NOTE: generated by the protobuf-c helper binary


// Forward decls for vocab
//uint64_t vocab_intern(void*, char*);
//char** vocab_get_table(void*);
//size_t vocab_get_size(void*);
//
//// Forward decls for string_table interfaces
//uint64_t pprof_stringtable_intern(void*, char*);
//char** pprof_stringtable_gettable(void*);
//size_t pprof_stringtable_size(void*);


/******************************************************************************\
|*                              pprof interface                               *|
\******************************************************************************/
// Governs the chunk size for various pprof resizing operations
#define DPROF_CHUNK_SZ 4096
// Generate convenient shortnames from the ProtoBuf header
#define PPSHORT(x) typedef Perftools__Profiles__##x PP##x
PPSHORT(Profile);
PPSHORT(ValueType);
PPSHORT(Sample);
PPSHORT(Label);
PPSHORT(Mapping);
PPSHORT(Location);
PPSHORT(Line);
PPSHORT(Function);
#undef PPSHORT

// DataDog PProf wrapper.  Name TBD, but it would have made find-replace harder
// if I just called it PProf since PPProfile is a valid shortname.
typedef struct DProf {
  PPProfile pprof;

  uint16_t table_type : 2,  // Currently, 0-bad, 1-string_table.h, 2-other
          _reserved_0 : 12;
  uint64_t (*intern_string)(void*, char*); // Function to intern a string
  char** (*string_table)(void*);           // Get a char** from internal
  size_t (*string_table_size)(void*);      // Get the size of the string table
  void* string_table_data; // Whatever state held by the string table impl.
} DProf;

// Prototypes
uint64_t pprof_mapAdd(DProf*, uint64_t, uint64_t, uint64_t, char*, char*);
uint64_t pprof_funAdd(DProf*, char*, char*, char*, int64_t);
uint64_t pprof_locAdd(DProf*, uint64_t, uint64_t, uint64_t*, int64_t*, size_t);
uint64_t pprof_lineAdd(DProf*, PPLocation*, uint64_t, int64_t);
char     pprof_sampleAdd(DProf*, int64_t*, size_t, uint64_t*, size_t);
void     pprof_sampleMakeStack(DProf*, PPSample*, uint64_t*, size_t, pid_t);

// (con/de)structors
char     pprof_Init(DProf*, char**, char**, size_t);
char     pprof_Free(DProf*);

// Serializers/helpers
void GZip(char*, const char*, const size_t);
size_t pprof_zip(DProf*, unsigned char*, const size_t);


#endif
